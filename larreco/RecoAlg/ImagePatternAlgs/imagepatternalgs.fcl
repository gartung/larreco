#include "pointidalg.fcl"

BEGIN_PROLOG

standard_pointidtrainingdata:
{
    module_type:     "PointIdTrainingData"

    SelectedTPC:     []
	SelectedView:    []
    OutTextFilePath: "."    # path to text files with data dumps
    DumpToRoot:      false  # if true then data is dumped to root histograms

    Crop:            true

    TrainingDataAlg:  @local::standard_trainingdataalg
}

standard_pointidtrainingnuevent:
{
    module_type:     "PointIdTrainingNuevent"

	  SelectedView:    []
    OutTextFilePath: "."
    DumpToRoot:      true  # if true then data is dumped to root histograms

    GenModuleLabel:  "generator"
    FidVolCut:	      20.0
    Crop:             true		

    TrainingDataAlg:  @local::standard_trainingdataalg
}

standard_pointidefftest:
{
	module_type:            "PointIdEffTest"
	CalorimetryAlg:         @local::standard_calorimetryalgmc

    SimModuleLabel:         "largeant"	

   	NNetModuleLabel:        "emtrackid"
    View:                   2

    SaveHitsFile:           false
}

standard_emtrackclusterid:
{
	module_type:            "EmTrackClusterId"

    WireLabel:              "caldata"     # tag of deconvoluted ADC on wires (recob::Wire)
    HitModuleLabel:         "linecluster" # tag of hits made to create clusters and/or tracks, nnet outputs are saved for each hit
    ClusterModuleLabel:     "linecluster" # tag of clusters which are to be EM/track tagged, unclustered leftovers will be EM/track
                                          # tagged new collection of clusters is made (including single-hit clusters made of leftovers)
                                          # and each accumulated nnet output is assigned to eacch cluster
                                          # - SKIP processing clusters if the label is set to ""
                                          # - NOTE: use clusters made of hits configured with HitModuleLabel
    TrackModuleLabel:       ""            # tag of 3D tracks which are to be EM/track tagged, nnet outputs are accumulated over
                                          # hits from the best track projection and assigned for each track, now collection view is
                                          # prefered: use the view with max(nhist_coll/2, nhits_ind1, nhits_ind2);
                                          # - SKIP processing tracks if the label is set to ""
                                          # - NOTE: use tracks made of hits configured with HitModuleLabel

    PointIdAlg:             @local::standard_pointidalg

    Views:                  []  # do processing in selected views only, or use all views if empty list
}
standard_emtrackmichelid:   @local::standard_emtrackclusterid  # the same config, only use 4-output CNN
standard_emtrackmichelid.module_type: "EmTrackMichelId"

standard_particledecayid:
{
	module_type:            "ParticleDecayId"

    WireLabel:              "caldata"     # tag of deconvoluted ADC on wires (recob::Wire)
    TrackModuleLabel:       "pmtrack"     # tag of tracks where decay points should be tagged

    PointIdAlg:             @local::standard_pointidalg

    RoiThreshold:           0.8   # search for decay points where the net output > ROI threshold
    PointThreshold:         0.998 # tag decay point if it is detected in at least two planes with net outputs product > POINT threshold
    SkipView:               -1    # use all views to find decays if -1, or skip the view with provided index and use only the two other views
}

END_PROLOG


BEGIN_PROLOG

standard_spacepointsolver:
{
  module_type: "SpacePointSolver"

  HitLabel: "gaushit"

  Fit: true

  # How close the intersections of three wire pairs need to be to form a
  # triplet (cm)
  WireIntersectThreshold: 0.7
  # How close intersections need to be in the drift direction
  WireIntersectThresholdDriftDir: 0.4

  Alpha: .05 # Regularization strength

  # Form triplets out of two hits and one bad induction wire
  AllowBadInductionHit: true
  # Form triplets out of two induction hits and a bad collection wire
  AllowBadCollectionHit: true

  MaxIterationsNoReg: 100
  MaxIterationsReg:   100

  XHitOffset:         0

}

microboone_spacepointsolver: @local::standard_spacepointsolver
microboone_spacepointsolver.WireIntersectThreshold:         0.2
microboone_spacepointsolver.WireIntersectThresholdDriftDir: 0.25
microboone_spacepointsolver.MaxIterationsNoReg:             20
microboone_spacepointsolver.MaxIterationsReg:               20
microboone_spacepointsolver.AllowBadCollectionHit:          false
microboone_spacepointsolver.AllowBadInductionHit:           false

END_PROLOG


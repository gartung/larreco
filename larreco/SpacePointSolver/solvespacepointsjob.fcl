#include "services_dune.fcl"
#include "SpacePointSolver.fcl"
#include "PlotSpacePoints.fcl"

process_name: Reco3D

source:
{
  module_type: RootInput
  maxEvents:  -1 # Number of events to create
}

services:
{
  TFileService: { fileName: "grads.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  @table::dunefd_services
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "reco3d.root"
 }
}

physics:
{
  producers:
  {
    reco3d: @local::standard_spacepointsolver
  }

  analyzers:
  {
    plotpre: @local::standard_plotspacepoints
    plotnoreg: @local::standard_plotspacepoints
    plot: @local::standard_plotspacepoints
  }

  ana: [ reco3d ]
  stream1: [ plotpre, plotnoreg, plot, out1 ]

  end_paths: [ stream1 ]
}

physics.analyzers.plotpre.SpacePointInstanceLabel: "pre"
physics.analyzers.plotpre.Suffix: "pre"
physics.analyzers.plotpre.PlotsTrue: false

physics.analyzers.plotnoreg.SpacePointInstanceLabel: "noreg"
physics.analyzers.plotnoreg.Suffix: "noreg"
physics.analyzers.plotnoreg.PlotsTrue: false

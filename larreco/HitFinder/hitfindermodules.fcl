// from larreco/RecoAlg:
#include "hitalgorithms.fcl"

BEGIN_PROLOG

standard_hitcheater:
{
 module_type:       "HitCheater"
 G4ModuleLabel:     "largeant"
 WireModuleLabel:   "caldata"
 MinimumCharge:     5.
}

standard_hitcheater_preSpill:  @local::standard_hitcheater
standard_hitcheater_postSpill: @local::standard_hitcheater
standard_hitcheater_preSpill.WireModuleLabel:  "caldataPreSpill:preSpill"
standard_hitcheater_postSpill.WireModuleLabel: "caldataPostSpill:postSpill"

standard_hitfinder:
{
 module_type:         "FFTHitFinder"
 CalDataModuleLabel:  "caldata"      
 MinSigInd:            6.0              # Induction signal height threshold  
 MinSigCol:            11.0             # Collection signal height threshold
 IndWidth:             6.0              # Initial width for induction fit
 ColWidth:             7.8              # Initial width for collection fit
 IndMinWidth:          4.0              # Induction Hit width threshold
 ColMinWidth:          6.0              # Collection hit width threshold
 MaxMultiHit:          3                # maximum hits for multi fit   
 AreaMethod:           0                # 0 = area by integral, 1 = area by gaussian area formula
 AreaNorms:            [ 13.25, 26.31 ] # normalizations that put signal area in 
                                        # same scale as peak height. 
}

gaus_hitfinder:
{
 module_type:         "GausHitFinder"
 CalDataModuleLabel:  "caldata"      
 MinSig: [ 6.0, 11.0 ]                  # signal height threshold, per plane
 InitWidth: [ 6.0, 7.8 ]                # initial width for fit, per plane
 MinWidth: [ 4.0, 6.0 ]                 # hit width threshold, per plane
 MaxMultiHit:          10               # maximum hits for multi fit   
 AreaMethod:           0                # 0 = area by integral, 1 = area by gaussian area formula
 AreaNorms:            [ 13.25, 26.31 ] # normalizations that put signal area in 
                                        # same scale as peak height. 
 TryNplus1Fits:        true		        # true will try to re-fit poorly modeled hits with n+1 gaussians
 					                    # false will NOT try to re-fit poorly modled hits
 Chi2NDFRetry:         25.0             # If the first hit returns a Chi2/NDF greater than (2X) this 
                                        # number (for single pulse) it will try a second fit
 Chi2NDF:              2000             # maximum Chisquared / NDF allowed for a hit to be saved (Set very high by default)

 FilterHits:           false            # true = do not keep undesired hits according to settings of HitFilterAlg object
 HitFilterAlg:
 {
   AlgName: "HitFilterAlg"
   MinPulseHeight: [5.0, 5.0, 5.0]      #minimum hit peak amplitude per plane
   MinPulseSigma:  [1.0, 1.0, 1.0]      #minimum hit rms per plane
 }

}


standard_rffhitfinderalg:
{
    AmplitudeThreshold:   [ 0.0 ]
    MeanMatchThreshold:   [ 2.0 ]
    MinMergeMultiplicity: [ 2 ]
}

rff_hitfinder:
{
 module_type:           "RFFHitFinder"
 WireModuleLabel:       "caldata"
 RFFHitFinderAlgParams: @local::standard_rffhitfinderalg
}

tt_hitfinder:
{
 module_type:         "TTHitFinder"
 CalDataModuleLabel:  "caldata"
 MinSigPeakInd:       6.0
 MinSigPeakCol:       11.0
 MinSigTailInd:       2.0
 MinSigTailCol:       3.67
 IndWidth:            3
 ColWidth:            3
}

#For now, keep the APAHitFinder configured just like the GausHitFinder
apa_hitfinder:               @local::gaus_hitfinder
apa_hitfinder.module_type:   "APAHitFinder"


standard_hitfinderana:
{
 module_type:          "HitFinderAna"
 HitsModuleLabel:      "ffthit"
 LArGeantModuleLabel:  "largeant"
}

gaus_hitfinderana:
{
 module_type:          "GausHitFinderAna"
 HitsModuleLabel:      "gaushit"
 LArGeantModuleLabel:  "largeant"
}

standard_fasthitfinder:
{
 module_type:         "RawHitFinder"
 CalDataModuleLabel:  "caldata"      
 MinSigInd:            5.0              # Induction signal height threshold  
 MinSigCol:            5.0             # Collection signal height threshold
 IndWidth:             6.0              # Initial width for induction fit
 ColWidth:             7.8              # Initial width for collection fit
 IndMinWidth:          4.0              # Induction Hit width threshold
 ColMinWidth:          6.0              # Collection hit width threshold
 MaxMultiHit:          3                # maximum hits for multi fit   
 AreaMethod:           0                # 0 = area by integral, 1 = area by gaussian area formula
 AreaNorms:            [ 13.25, 26.31 ] # normalizations that put signal area in
}

standard_clustercrawlerhit:
{
 # call this: "cchit"
 module_type:         "HitFinder"
 CalDataModuleLabel:  "caldata"
 CCHitFinderAlg:      @local::standard_cchitfinderalg
} # standard_clustercrawlerhit


jp250L_hitfinder:       @local::standard_hitfinder
jp250L_gaushitfinder:   @local::gaus_hitfinder

bo_hitfinder:       @local::standard_hitfinder
bo_gaushitfinder:   @local::gaus_hitfinder

argoneut_hitfinder:     @local::standard_hitfinder
argoneut_gaushitfinder: @local::gaus_hitfinder
argoneut_mc_hitfinder:  @local::standard_hitfinder
argoneut_mc_hitfinder.AreaNorms: [ 12.89, 14.51 ]

microboone_hitfinder:     @local::standard_hitfinder
microboone_gaushitfinder: @local::gaus_hitfinder
microboone_rffhitfinder: @local::rff_hitfinder
microboone_hitfinder.IndMinWidth: 1.0
microboone_hitfinder.ColMinWidth: 1.0
microboone_gaushitfinder.MinSig: [ 6.0, 6.0, 11.0 ]
microboone_gaushitfinder.InitWidth: [ 6.0, 6.0, 7.8 ]
microboone_gaushitfinder.MinWidth:  [ 4.0, 4.0, 6.0 ]
microboone_gaushitfinder.AreaNorms: [ 13.25, 13.25, 26.31 ]
microboone_clustercrawlerhit: @local::standard_clustercrawlerhit
microboone_clustercrawlerhit.CCHitFinderAlg:      @local::microboone_cchitfinderalg
END_PROLOG

// from larreco/RecoAlg:
#include "hitalgorithms.fcl"
#include "HitFinderTools.fcl"

BEGIN_PROLOG

standard_hitcheater:
{
 module_type:       "HitCheater"
 G4ModuleLabel:     "largeant"
 WireModuleLabel:   "caldata"
 MinimumCharge:     5.
}

standard_hitcheater_preSpill:  @local::standard_hitcheater
standard_hitcheater_postSpill: @local::standard_hitcheater
standard_hitcheater_preSpill.WireModuleLabel:  "caldataPreSpill:preSpill"
standard_hitcheater_postSpill.WireModuleLabel: "caldataPostSpill:postSpill"

standard_hitfinder:
{
 module_type:         "FFTHitFinder"
 CalDataModuleLabel:  "caldata"      
 MinSigInd:            6.0              # Induction signal height threshold  
 MinSigCol:            11.0             # Collection signal height threshold
 IndWidth:             6.0              # Initial width for induction fit
 ColWidth:             7.8              # Initial width for collection fit
 IndMinWidth:          4.0              # Induction Hit width threshold
 ColMinWidth:          6.0              # Collection hit width threshold
 MaxMultiHit:          3                # maximum hits for multi fit   
 AreaMethod:           0                # 0 = area by integral, 1 = area by gaussian area formula
 AreaNorms:            [ 13.25, 26.31 ] # normalizations that put signal area in 
                                        # same scale as peak height. 
}

gaus_hitfinder:
{
 module_type:          "GausHitFinder"
 CalDataModuleLabel:   "caldata"
 MinSig:               [ 6.0, 11.0 ]      # signal height threshold, per plane
 MinWidth:             [ 4.0, 6.0 ]       # hit width threshold, per plane
 MaxMultiHit:          10                 # maximum hits for multi fit
 AreaMethod:           0                  # 0 = area by integral, 1 = area by gaussian area formula
 AreaNorms:            [ 13.25, 26.31 ]   # normalizations that put signal area in
                                          # same scale as peak height.
 LongMaxHits:          [  1,  1,  1]      # max number hits in long pulse trains
 LongPulseWidth:       [ 16, 16, 16]      # max widths for hits in long pulse trains
 TryNplus1Fits:        true		          # true will try to re-fit poorly modeled hits with n+1 gaussians
 					                      # false will NOT try to re-fit poorly modled hits
 Chi2NDF:              2000               # maximum Chisquared / NDF allowed for a hit to be saved (Set very high by default)

 AllHitsInstanceName:  ""                 # If non-null then this will be the instance name of all hits output to event
                                          # in this case there will be two hit collections, one filtered and one containing all hits
 FilterHits:           false              # true = do not keep undesired hits according to settings of HitFilterAlg object
 CandidateHits:        @local::candhitfinder_standard
 PeakFitter:           @local::peakfitter_gaussian
 HitFilterAlg:
 {
   AlgName: "HitFilterAlg"
   MinPulseHeight: [5.0, 5.0, 5.0]        #minimum hit peak amplitude per plane
   MinPulseSigma:  [1.0, 1.0, 1.0]        #minimum hit rms per plane
 }
                                          # In addition to the filter alg we can also filter hits on the same pulse train
 PulseHeightCuts:      [3.0,  3.0,  3.0 ] # Minimum pulse height
 PulseWidthCuts:       [2.0,  1.5,  1.0 ] # Minimum pulse width
 PulseRatioCuts:       [0.35, 0.40, 0.20] # Ratio of pulse height to width
}

dpraw_hitfinder:
{
 module_type:          	"DPRawHitFinder"
 LogLevel:	   	0

 CalDataModuleLabel:   	"caldata"
 MinSig:               	10    		# peak threshold for hit fitting (in ADC). Peaks with lower amplitudes are neither fitted nor stored.
 TicksToStopPeakFinder: 4		# when walking along waveform to find start and end points of a peak, stop when current tick is followed by minimum "TicksToStopPeakFinder" ticks 						# with equal or higher ADC counts (stop anyway if ADC count of a tick is <= 0)
 MinWidth:             	10              # width threshold for hit fitting (in ticks). Peaks with smaller widths are neither fitted nor stored.
 MinADCSum:    		10             	# threshold for ADC sum. Peaks with smaller values neither fitted nor stored.
 MinADCSumOverWidth:    2.4             # threshold for ADC sum over width (ADC per ticks). Peaks with smaller values neither fitted nor stored.
 MaxMultiHit:          	10              # maximum number of hits in multi fit for first fit attempt. If there are more hits, split in two ore more multi fits.
					# When refitting, maximum number of hits in multi fit is: 1) not greater than 2xMaxMultiHit and 2) not greater than 3x number of hits before re-fitting
 Chi2NDF:              	2000            # maximum chi square / NDF allowed for a hit to be saved (set very high by default)
 Chi2NDFRetry:         	25.0            # if the first hit returns a Chi2/NDF greater than this, try to re-fit
 TryNplus1Fits:        	true		# true: will try to re-fit poorly modeled hits (chi2PerNDF>Chi2NDFRetry) with n+1 exponentials
 					# false will NOT try to re-fit poorly modled hits
 ChargeNorm:           	1		# normalizations that put integral of fit for a hit to same value as the ADC sum of this hit
 NumBinsToAverage:     	0		# 0 or 1 = no averaging
 MinTau:		0.01		# mainimum value of the rising and falling time constants of the fit, in ticks. Sets a minimum width for the fit (~ width the electronic shaping function)
 MaxTau:		5		# maximum value of the rising and falling time constants of the fit, in ticks. Limits the width of the fit (maximum width depends on drift distance etc.)
 FitPeakMeanRange:	5		# par limits for mean of the fit

 GroupMaxDistance:	10		# max distance between two peaks for grouping. Grouped peaks are fitted together.
 GroupMinADC:		-5		# minimum ADC count between two peaks to be grouped.
 DoMergePeaks:		true		# true: peak merging (merge two peaks into one) before fitting enabled
 MergeADCSumThreshold:	0.2		# merge two peaks only if (ADC sum of the smaller peak) < MergeADCSumThreshold*(ADC sum of the bigger peak)
 MergeMaxADCThreshold:	0.2		# merge two peaks only if (height of the smaller peak) < MergeADCSumThreshold*(height sum of the bigger peak)

 WidthNormalization:    2.335		# standard width of the fitted hit is the FWHM of the fitted function (full width at half maximum). This width is then divied by 'WidthNormalization' and saved to the hit object.
					# standard value is chosen to be 2.335 = 2*sqrt(2*ln(2)), which is the relation between FWHM and standard deviation for the Gaussian distribution.

 FilterHits:           	false           # true = do not keep undesired hits according to settings of HitFilterAlg object
 HitFilterAlg:
 {
   AlgName: "HitFilterAlg"
   MinPulseHeight: [5.0, 5.0, 5.0]      #minimum hit peak amplitude per plane
   MinPulseSigma:  [1.0, 1.0, 1.0]      #minimum hit rms per plane
 }

}

standard_rffhitfinderalg:
{
    AmplitudeThreshold:   [ 0.0 ]
    MeanMatchThreshold:   [ 2.0 ]
    MinMergeMultiplicity: [ 2 ]
}

rff_hitfinder:
{
 module_type:           "RFFHitFinder"
 WireModuleLabel:       "caldata"
 RFFHitFinderAlgParams: @local::standard_rffhitfinderalg
}

tt_hitfinder:
{
 module_type:         "TTHitFinder"
 CalDataModuleLabel:  "caldata"
 MinSigPeakInd:       6.0
 MinSigPeakCol:       11.0
 MinSigTailInd:       2.0
 MinSigTailCol:       3.67
 IndWidth:            3
 ColWidth:            3
}

#For now, keep the APAHitFinder configured just like the GausHitFinder
apa_hitfinder:               @local::gaus_hitfinder
apa_hitfinder.module_type:   "APAHitFinder"


standard_hitfinderana:
{
 module_type:          "HitFinderAna"
 HitsModuleLabel:      "ffthit"
 LArGeantModuleLabel:  "largeant"
}

gaus_hitfinderana:
{
 module_type:          "GausHitFinderAna"
 HitsModuleLabel:      "gaushit"
 LArGeantModuleLabel:  "largeant"
}

standard_fasthitfinder:
{
 module_type:         "RawHitFinder"
 CalDataModuleLabel:  "caldata"      
 MinSigInd:            5.0              # Induction signal height threshold  
 MinSigCol:            5.0             # Collection signal height threshold
 IndWidth:             6.0              # Initial width for induction fit
 ColWidth:             7.8              # Initial width for collection fit
 IndMinWidth:          4.0              # Induction Hit width threshold
 ColMinWidth:          6.0              # Collection hit width threshold
 MaxMultiHit:          3                # maximum hits for multi fit   
 AreaMethod:           0                # 0 = area by integral, 1 = area by gaussian area formula
 AreaNorms:            [ 13.25, 26.31 ] # normalizations that put signal area in
}

standard_clustercrawlerhit:
{
 # call this: "cchit"
 module_type:         "HitFinder"
 CalDataModuleLabel:  "caldata"
 CCHitFinderAlg:      @local::standard_cchitfinderalg
} # standard_clustercrawlerhit


jp250L_hitfinder:       @local::standard_hitfinder
jp250L_gaushitfinder:   @local::gaus_hitfinder

bo_hitfinder:       @local::standard_hitfinder
bo_gaushitfinder:   @local::gaus_hitfinder

argoneut_hitfinder:     @local::standard_hitfinder
argoneut_gaushitfinder: @local::gaus_hitfinder
argoneut_mc_hitfinder:  @local::standard_hitfinder
argoneut_mc_hitfinder.AreaNorms: [ 12.89, 14.51 ]

microboone_hitfinder:     @local::standard_hitfinder
microboone_gaushitfinder: @local::gaus_hitfinder
microboone_rffhitfinder: @local::rff_hitfinder
microboone_hitfinder.IndMinWidth: 1.0
microboone_hitfinder.ColMinWidth: 1.0
microboone_gaushitfinder.MinSig: [ 6.0, 6.0, 11.0 ]
microboone_gaushitfinder.InitWidth: [ 6.0, 6.0, 7.8 ]
microboone_gaushitfinder.MinWidth:  [ 4.0, 4.0, 6.0 ]
microboone_gaushitfinder.AreaNorms: [ 13.25, 13.25, 26.31 ]
microboone_clustercrawlerhit: @local::standard_clustercrawlerhit
microboone_clustercrawlerhit.CCHitFinderAlg:      @local::microboone_cchitfinderalg
END_PROLOG

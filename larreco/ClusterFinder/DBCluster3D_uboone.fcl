#include "services_microboone.fcl"
#include "SpacePointSolver.fcl"
#include "cluster_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"

process_name: RecoDB


microboone_reco_mcc8_services:
{                             
  PhotonVisibilityService:    @local::microboone_photonvisibilityservice
  OpDigiProperties:           @local::microboone_opdigiproperties       
                              @table::microboone_services_reco          

}
microboone_reco_mcc8_services.DetectorPropertiesService.NumberTimeSamples:        6400
microboone_reco_mcc8_services.DetectorPropertiesService.ReadOutWindowSize:        6400
microboone_reco_mcc8_services.DetectorClocksService.InheritClockConfig:           false
microboone_reco_mcc8_services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3


source:
{
  module_type: RootInput
  maxEvents:  -1 # Number of events to create
}

services:
{
  TFileService: { fileName: "grads.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  #BackTracker:             @local::microboone_backtracker
  @table::microboone_reco_mcc8_services
}


# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
  reco3d:           @local::standard_spacepointsolver
  dbcluster:        @local::standard_dbcluster3d
 }

#define the producer and filter modules for this path, order matters,
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ reco3d, dbcluster ]

 #define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 #ie filters and producers
 trigger_paths: [reco]

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}
physics.producers.reco3d.Plots: false
physics.producers.reco3d.PlotsTrue: false
physics.producers.dbcluster.DBScan3DAlg.epsilon: 10
physics.producers.dbcluster.DBScan3DAlg.minpts: 2
physics.producers.dbcluster.HitModuleLabel: "gaushit"
physics.producers.dbcluster.SPHitAssnLabel: "reco3d"


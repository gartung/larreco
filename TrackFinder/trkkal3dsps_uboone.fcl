#include "services_microboone.fcl"
#include "largeantmodules.fcl"
#include "mccheatermodules.fcl"
#include "trackfinderservices.fcl"
#include "trackfindermodules.fcl"
#####include "filters.fcl"

process_name: TrkKal3DSPS


services:
{
  # Load the service that manages root files for histograms.
  # 5 momenta, useMC=F, no outliers (adjacent wire beyond 2cm from last one)
  TFileService: { fileName: "recon_hist_Kal_mu_25deg.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_warning
  user:   @local::microboone_simulation_services
}
# stop the "ctor warning" madness, yet keep desired verbosity in Tracking.
services.message.destinations.warningmsg.categories.default.limit:1
services.message.destinations.warningmsg.categories.RecoBaseDefaultCtor.limit:0
services.message.destinations.warningmsg.categories.Track3DKalmanSPS.limit: 1000000
services.message.destinations.warningmsg.categories.Track3DKalmanSPS.reportEvery: 1
services.message.destinations.warningmsg.categories.Track3DKalmanSPS.timeSpan: 0


source:
{
  module_type: RootInput
  fileNames: [ "../trk/recon_trk_mu_25deg.root" ] # recon_trk_mu_mix.root
  maxEvents: 5000       # Number of events to create
  skipEvents: 0
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "recon_Kal_mu_25deg.root" #default file name, can override from command line with -o or --output
 }
}

physics:
{

 producers:
 {
   trackkal: @local::microboone_kalman
 }

# filters:
# {
#   badevts:  @local::evtfilter
# }

 analyzers:
 {
   largana:  @local::microboone_largeantana
   sptana: @local::microboone_spacepoint
   trkana: @local::standard_trackana
 }


 #filters reject all following items.  see lines starting physics.producers below
 recon: [ trackkal ]  # badevts, 
 analyze: [ largana, trkana ] # trkana, sptana, 

 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ recon ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ analyze ] # let's drop ", stream1". EC, 5-Oct-2011. 
}

# set some parameters. Check the smallness of the x position, as is the case.
physics.producers.trackkal.SpptModuleLabel:  "spacepoints" // 
physics.producers.trackkal.PosErr3: [0.05, 0.1, 0.1] // cm 
// 0.3,0.3,0.3; 0.2,0.2,0.4 does evt 1, but gives tiny p for evt 2.
physics.producers.trackkal.MomErr3: [.01, .01, .03] // GeV
physics.producers.trackkal.MomStart3: [0.5, 0.5, 1.8]   // GeV
#physics.producers.trackkal.DoFit: false // !!!!!
physics.producers.trackkal.PerpLimit: 50. // Perp outliers to PC1 to omit
physics.producers.trackkal.PdgCode: -13 // mu+
physics.producers.trackkal.ErrScaleSim: 0. // Non-0 smears expected angle.
physics.producers.trackkal.ErrScaleMeas: 1.0 //scales angle error, V[0][0].
physics.producers.trackkal.DecimateC: 1 // 20-40 !!!!!
physics.producers.trackkal.MaxUpdateC: 0.01 // !!!!!
physics.producers.trackkal.DecimateU: 1 // 20 or 30-40!!!!!
physics.producers.trackkal.DistanceU: 10.0 // 
physics.producers.trackkal.MaxUpdateU: 0.1 // !!!!!
physics.producers.trackkal.Chi2HitThresh: 1000.0 // !!!!!

#physics.filters.badevts.BadEvents: [24, 160, 174, 179, 186, 225 ] // BadEvents,BadRuns must be vectors 
#physics.filters.badevts.BadRuns:   [1, 1, 1, 1, 1, 1 ] // of equal length.

physics.analyzers.sptana.ClusterModuleLabel: "fuzzy"
physics.analyzers.trkana.TrackModuleLabel: "trackkal"



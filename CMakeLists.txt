# ======================================================================
#  larreco main build file
#
#  cd .../path/to/build/directory
#  source .../path/to/larreco/ups/setup_for_development <-d|-p>
#  cmake [-DCMAKE_INSTALL_PREFIX=/install/path]
#        -DCMAKE_BUILD_TYPE=$CETPKG_TYPE
#        $CETPKG_SOURCE
#  make
#  make test
#  make install
#  make package (builds distribution tarfile)
# ======================================================================


# use cmake 2.8 or later
cmake_minimum_required (VERSION 2.8)

project(larreco)

# cetbuildtools contains our cmake modules
SET ( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
IF (NOT CETBUILDTOOLS_VERSION)
    MESSAGE (FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules")
ENDIF()

set(CMAKE_MODULE_PATH $ENV{ART_DIR}/Modules
		      $ENV{CETBUILDTOOLS_DIR}/Modules
		      ${CMAKE_MODULE_PATH})

include(CetCMakeEnv)
cet_cmake_env()

set_install_root()

cet_set_compiler_flags(DIAGS CAUTIOUS
  WERROR
  NO_UNDEFINED
  EXTRA_FLAGS -pedantic -Wno-unused-local-typedefs
  EXTRA_CXX_FLAGS -std=c++11
)
cet_enable_asserts()

# issue 5589: if we are not in a debugging build, disable the dispatch of debug messages in messagefacility
string(TOUPPER ${CMAKE_BUILD_TYPE} BTYPE_UC )
if( ${BTYPE_UC} STREQUAL "OPT" OR
    ${BTYPE_UC} STREQUAL "PROF" OR
    ${BTYPE_UC} STREQUAL "RELEASE" OR
    ${BTYPE_UC} STREQUAL "MINSIZEREL" )
  message ( STATUS "Disabling LOG_DEBUG from messagefacility library" )
  add_definitions(-DML_NDEBUG)
endif()

cet_report_compiler_flags()

# these are minimum required versions, not the actual product versions
find_ups_product( larcore v0_00_01 )
find_ups_product( lardata v0_00_01 )
find_ups_product( larevt v0_00_01 )
find_ups_product( larsim v0_00_01 )
find_ups_product( nutools v0_00_00 )
find_ups_product( art v1_06_00 )
find_ups_product( cetbuildtools v3_06_00 )
find_ups_product( geant4 v4_9_6 )

cet_check_gcc()

# macros for dictionary and simple_plugin
include(ArtDictionary)
include(ArtMake)
include(BuildPlugins)

#for Eigen, in CornerFinder
include_directories(/usr/local/)

# source
add_subdirectory(ClusterFinder)
add_subdirectory(EventFinder)
add_subdirectory(Genfit)
add_subdirectory(HitFinder)
add_subdirectory(RecoAlg)
add_subdirectory(ShowerFinder)
add_subdirectory(TrackFinder)
add_subdirectory(VertexFinder)
add_subdirectory(SpacePointFinder)


# ups - table and config files
add_subdirectory(ups)

# packaging utility
include(UseCPack)
